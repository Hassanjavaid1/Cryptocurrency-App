{"version":3,"file":"static/js/712.cd31e25c.chunk.js","mappings":"0JAqEA,QAnEA,WACE,MAAOA,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KAa3CC,EAAAA,EAAAA,YAAU,KAXQC,WAChB,IACE,MAAMC,EAAM,4CACNC,QAAiBC,MAAMF,GACvBG,QAAaF,EAASG,OAC5BR,EAAaO,EAAKA,KACpB,CAAE,MAAOE,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAIAE,EAAW,GACV,IAEH,IAAIC,GADS,IAAIC,MACMC,eACvB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uBACJF,EAAAA,EAAAA,KAAA,KAAGK,GAAG,OAAMH,SAAEL,QAEhBM,EAAAA,EAAAA,MAAA,SAAOC,UAAU,iCAAiCC,GAAG,kBAAiBH,SAAA,EACpEF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKJ,SAAC,UAChBF,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKJ,SAAC,UAChBF,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKJ,SAAC,YAChBF,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKJ,SAAC,gBAChBF,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKJ,SAAC,SAChBF,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKJ,SAAC,YAChBF,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKJ,SAAC,gBAChBF,EAAAA,EAAAA,KAAA,MAAIM,MAAM,MAAKJ,SAAC,uBAGpBF,EAAAA,EAAAA,KAAA,SAAAE,SACGlB,EAAUuB,KAAKC,IACdL,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKM,EAAMC,QACXT,EAAAA,EAAAA,KAAA,MAAAE,SAAKM,EAAME,QACXV,EAAAA,EAAAA,KAAA,MAAAE,SAAKM,EAAMG,UACXR,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,IAAEU,OAAOJ,EAAMK,UAAUC,QAAQ,OACrCX,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,IAAEU,OAAOJ,EAAMO,mBAAmBD,QAAQ,OAC9CX,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,IAAEc,SAASR,EAAMS,mBACrBd,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,IAAEc,SAASR,EAAMU,kBACrBlB,EAAAA,EAAAA,KAAA,MAAAE,UACEF,EAAAA,EAAAA,KAAA,KACEmB,KAAMX,EAAMY,SACZC,OAAO,SACPC,IAAI,sBAAqBpB,SAExBM,EAAMY,SAASG,MAAM,EAAG,UAdtBf,EAAMH,eAwB7B,C","sources":["Componenet/JS/Table.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../CSS/Navbar.css\";\r\nfunction Table() {\r\n  const [storeData, setStoreData] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const url = \"https://api.coincap.io/v2/assets?limit=10\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      setStoreData(data.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const date = new Date();\r\n  let getFullDate = date.toDateString();\r\n  return (\r\n    <>\r\n      <div className=\"table_main_container\">\r\n        <div className=\"title_date\">\r\n          <h2>Crypto Dashboard!</h2>\r\n          <p id=\"date\">{getFullDate}</p>\r\n        </div>\r\n        <table className=\"table table-striped table-dark\" id=\"table_container\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Rank</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Symbol</th>\r\n              <th scope=\"col\">Price(USD)</th>\r\n              <th scope=\"col\">24h</th>\r\n              <th scope=\"col\">Volume</th>\r\n              <th scope=\"col\">Market Cap</th>\r\n              <th scope=\"col\">Explore More</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {storeData.map((asset) => (\r\n              <tr key={asset.id}>\r\n                <td>{asset.rank}</td>\r\n                <td>{asset.name}</td>\r\n                <td>{asset.symbol}</td>\r\n                <td>${Number(asset.priceUsd).toFixed(2)}</td>\r\n                <td>${Number(asset.changePercent24Hr).toFixed(2)}</td>\r\n                <td>${parseInt(asset.volumeUsd24Hr)}</td>\r\n                <td>${parseInt(asset.marketCapUsd)}</td>\r\n                <td>\r\n                  <a\r\n                    href={asset.explorer}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {asset.explorer.slice(0, 20)}\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"],"names":["storeData","setStoreData","useState","useEffect","async","url","response","fetch","data","json","error","console","fetchData","getFullDate","Date","toDateString","_jsx","_Fragment","children","_jsxs","className","id","scope","map","asset","rank","name","symbol","Number","priceUsd","toFixed","changePercent24Hr","parseInt","volumeUsd24Hr","marketCapUsd","href","explorer","target","rel","slice"],"sourceRoot":""}